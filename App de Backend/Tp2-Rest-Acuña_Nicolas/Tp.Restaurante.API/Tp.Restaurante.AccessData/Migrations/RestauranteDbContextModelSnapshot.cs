// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tp.Restaurante.AccessData;

namespace Tp.Restaurante.AccessData.Migrations
{
    [DbContext(typeof(RestauranteDbContext))]
    partial class RestauranteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tp.Restaurante.Domain.Entities.Comanda", b =>
                {
                    b.Property<Guid>("ComandaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("FormaEntregaId")
                        .HasColumnType("int");

                    b.Property<int>("PrecioTotal")
                        .HasColumnType("int");

                    b.HasKey("ComandaId");

                    b.HasIndex("FormaEntregaId");

                    b.ToTable("Comandas");
                });

            modelBuilder.Entity("Tp.Restaurante.Domain.Entities.ComandaMercaderia", b =>
                {
                    b.Property<Guid>("ComandaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MercaderiaId")
                        .HasColumnType("int");

                    b.Property<int>("ComandaMercaderiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ComandaId", "MercaderiaId", "ComandaMercaderiaId");

                    b.HasIndex("MercaderiaId");

                    b.ToTable("ComandaMercaderias");
                });

            modelBuilder.Entity("Tp.Restaurante.Domain.Entities.FormaEntrega", b =>
                {
                    b.Property<int>("FormaEntregaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FormaEntregaId");

                    b.ToTable("FormaEntrega");

                    b.HasData(
                        new
                        {
                            FormaEntregaId = 1,
                            Descripcion = "Salon"
                        },
                        new
                        {
                            FormaEntregaId = 2,
                            Descripcion = "Delivery"
                        },
                        new
                        {
                            FormaEntregaId = 3,
                            Descripcion = "Pedidos Ya"
                        });
                });

            modelBuilder.Entity("Tp.Restaurante.Domain.Entities.Mercaderia", b =>
                {
                    b.Property<int>("MercaderiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ingredientes")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<string>("Preparacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TipoMercaderiaId")
                        .HasColumnType("int");

                    b.HasKey("MercaderiaId");

                    b.HasIndex("TipoMercaderiaId");

                    b.ToTable("Mercaderias");

                    b.HasData(
                        new
                        {
                            MercaderiaId = 1,
                            Imagen = "https://unareceta.com/wp-content/uploads/2014/07/pollo-al-horno-a-la-miel-.jpg",
                            Ingredientes = "pollo, condimentos,...",
                            Nombre = "Pollo al horno",
                            Precio = 400,
                            Preparacion = "al horno",
                            TipoMercaderiaId = 2
                        },
                        new
                        {
                            MercaderiaId = 2,
                            Imagen = "https://www.recetas-argentinas.com/base/stock/Recipe/81-image/81-image_web.jpg",
                            Ingredientes = "carne, condimentos,...",
                            Nombre = "Carne asada",
                            Precio = 600,
                            Preparacion = "a la parrilla",
                            TipoMercaderiaId = 4
                        },
                        new
                        {
                            MercaderiaId = 3,
                            Imagen = "https://static.misionesonline.news/wp-content/uploads/2020/05/28163533/milaaa.jpg",
                            Ingredientes = "carne, pan rallado, huevo, papas, condimentos,...",
                            Nombre = "Milanesas con fritas",
                            Precio = 200,
                            Preparacion = "frito",
                            TipoMercaderiaId = 2
                        },
                        new
                        {
                            MercaderiaId = 4,
                            Imagen = "https://www.cocacolaespana.es/content/dam/one/es/es/body/sostenibilidad/nuestros-productos/historia-envases-coca-cola/tamanos-237.jpg",
                            Ingredientes = "agua, azucar, etc...",
                            Nombre = "Coca Cola",
                            Precio = 100,
                            Preparacion = "gaseosa",
                            TipoMercaderiaId = 8
                        },
                        new
                        {
                            MercaderiaId = 5,
                            Imagen = "https://http2.mlstatic.com/D_NQ_NP_777487-MLA44257220736_122020-O.jpg",
                            Ingredientes = "harina, muzzarella, salsa de tomate, condimentos,...",
                            Nombre = "Pizza de muzzarella",
                            Precio = 450,
                            Preparacion = "al horno",
                            TipoMercaderiaId = 5
                        },
                        new
                        {
                            MercaderiaId = 6,
                            Imagen = "https://www.cucinare.tv/wp-content/uploads/2018/11/Pastel-de-papas.jpg",
                            Ingredientes = "carne picada, papas, condimentos,...",
                            Nombre = "Pastel de papas",
                            Precio = 500,
                            Preparacion = "al horno",
                            TipoMercaderiaId = 2
                        },
                        new
                        {
                            MercaderiaId = 7,
                            Imagen = "https://economipedia.com/wp-content/uploads/Cerveza-artesanal-1.jpg",
                            Ingredientes = "malta",
                            Nombre = "Cerveza",
                            Precio = 250,
                            Preparacion = "liquido",
                            TipoMercaderiaId = 9
                        },
                        new
                        {
                            MercaderiaId = 8,
                            Imagen = "https://imagenes.montevideo.com.uy/imgnoticias/201704/_W576_H432/608221.jpg",
                            Ingredientes = "tomate, mayonesa, etc...",
                            Nombre = "Tomates rellenos",
                            Precio = 150,
                            Preparacion = "rellenar el tomate",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 9,
                            Imagen = "https://media-cdn.tripadvisor.com/media/photo-s/1a/13/cd/e8/mi-plato-de-ravioles.jpg",
                            Ingredientes = "harina, verduras, salsa de tomate, etc...",
                            Nombre = "Ravioles con salsa",
                            Precio = 350,
                            Preparacion = "preparar los ravioles, hacer la salsa",
                            TipoMercaderiaId = 3
                        },
                        new
                        {
                            MercaderiaId = 10,
                            Imagen = "https://blog.kakaocdn.net/dn/EDJZG/btqy5S3BO90/m6OkKqvnN51sRkbiFG6PW0/img.jpg",
                            Ingredientes = "pan, lechuga, carne , etc...",
                            Nombre = "Sandwich completo",
                            Precio = 350,
                            Preparacion = "cortar el pan....",
                            TipoMercaderiaId = 6
                        },
                        new
                        {
                            MercaderiaId = 11,
                            Imagen = "https://www.superama.com.mx/views/micrositio/recetas/images/comidasaludable/ensaladamixta/Web_fotoreceta.jpg",
                            Ingredientes = "lechuga, tomate, etc...",
                            Nombre = "Ensalada mixta",
                            Precio = 250,
                            Preparacion = "hacer la ensalada....",
                            TipoMercaderiaId = 7
                        },
                        new
                        {
                            MercaderiaId = 12,
                            Imagen = "https://www.bacanal.com.ar/wp-content/uploads/2019/08/flan-casero-mixto.jpg",
                            Ingredientes = "huevos, leche, crema, dulce de leche, etc...",
                            Nombre = "Flan mixto",
                            Precio = 100,
                            Preparacion = "hacer el flan....",
                            TipoMercaderiaId = 10
                        });
                });

            modelBuilder.Entity("Tp.Restaurante.Domain.Entities.TipoMercaderia", b =>
                {
                    b.Property<int>("TipoMercaderiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TipoMercaderiaId");

                    b.ToTable("TipoMercaderia");

                    b.HasData(
                        new
                        {
                            TipoMercaderiaId = 1,
                            Descripcion = "Entrada"
                        },
                        new
                        {
                            TipoMercaderiaId = 2,
                            Descripcion = "Minutas"
                        },
                        new
                        {
                            TipoMercaderiaId = 3,
                            Descripcion = "Pastas"
                        },
                        new
                        {
                            TipoMercaderiaId = 4,
                            Descripcion = "Parrilla"
                        },
                        new
                        {
                            TipoMercaderiaId = 5,
                            Descripcion = "Pizzas"
                        },
                        new
                        {
                            TipoMercaderiaId = 6,
                            Descripcion = "Sandwich"
                        },
                        new
                        {
                            TipoMercaderiaId = 7,
                            Descripcion = "Ensaladas"
                        },
                        new
                        {
                            TipoMercaderiaId = 8,
                            Descripcion = "Bebidas"
                        },
                        new
                        {
                            TipoMercaderiaId = 9,
                            Descripcion = "Cerveza Artesanal"
                        },
                        new
                        {
                            TipoMercaderiaId = 10,
                            Descripcion = "Postres"
                        });
                });

            modelBuilder.Entity("Tp.Restaurante.Domain.Entities.Comanda", b =>
                {
                    b.HasOne("Tp.Restaurante.Domain.Entities.FormaEntrega", "FormaEntregaNavigator")
                        .WithMany("ComandasNavigator")
                        .HasForeignKey("FormaEntregaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormaEntregaNavigator");
                });

            modelBuilder.Entity("Tp.Restaurante.Domain.Entities.ComandaMercaderia", b =>
                {
                    b.HasOne("Tp.Restaurante.Domain.Entities.Comanda", "ComandaNavigator")
                        .WithMany()
                        .HasForeignKey("ComandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tp.Restaurante.Domain.Entities.Mercaderia", "MercaderiaNavigator")
                        .WithMany()
                        .HasForeignKey("MercaderiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComandaNavigator");

                    b.Navigation("MercaderiaNavigator");
                });

            modelBuilder.Entity("Tp.Restaurante.Domain.Entities.Mercaderia", b =>
                {
                    b.HasOne("Tp.Restaurante.Domain.Entities.TipoMercaderia", "TipoMercaderiaNavigator")
                        .WithMany("MercaderiasNavigator")
                        .HasForeignKey("TipoMercaderiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoMercaderiaNavigator");
                });

            modelBuilder.Entity("Tp.Restaurante.Domain.Entities.FormaEntrega", b =>
                {
                    b.Navigation("ComandasNavigator");
                });

            modelBuilder.Entity("Tp.Restaurante.Domain.Entities.TipoMercaderia", b =>
                {
                    b.Navigation("MercaderiasNavigator");
                });
#pragma warning restore 612, 618
        }
    }
}
